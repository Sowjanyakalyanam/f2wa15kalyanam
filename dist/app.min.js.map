{"version":3,"sources":["app.js"],"names":["createError","require","express","cookieParser","path","usersRouter","computationRouter","logger","app","set","join","__dirname","mydataRouter","use","json","indexRouter","extended","req","res","next","err","message","locals","error","get","status","render"],"mappings":"aAAA,IAAIA,YAAcC,QAAQ,eACtBC,QAAUD,QAAQ,WADlBD,KAAAA,QAAcC,QAGdE,aAAeF,QAAQ,iBAFvBC,OAAOD,QAAU,UACjBG,YAAcH,QAAlB,kBAKII,YAAcJ,QAAQ,kBAJtBE,aAAeF,QAAQ,mBAMvBK,kBAAoBL,QAAQ,wBAL5BM,IAAML,UASVM,IAAIC,IAAI,QAASL,KAAKM,KAAKC,UAAW,UANtCH,IAAIH,IAAAA,cAAcJ,OAClBO,IAAII,IAAAA,OAAAA,QASJJ,IAAIK,IAAIX,QAAQY,QARhBN,IAAIF,IAAAA,QAAAA,WAAoBL,CAAAA,UAAQ,KAUhCO,IAAIK,IAAIV,gBATRK,IAAIA,IAAGN,QAAGA,OAEVE,KAAAM,KAAAC,UAAA,YACAH,IAAIC,IAAI,IAAAM,aACRP,IAAIC,IAAI,SAAAJ,aAERG,IAAIK,IAAIN,UAAOK,cACfJ,IAAIK,IAAIX,eAARI,mBAC6BU,IAAAA,IAAAA,SAAUC,EAAAC,EAAAC,GAAvCA,EAAAnB,YAAA,QAKAQ,IAAIK,IAAI,SAARO,EAAkBf,EAAAA,EAAlBc,GAEAX,EAAIK,OAAIQ,QAARD,EAAwBd,QAUtBY,EAAII,OAAOC,MAA+B,gBAAvBN,EAAIT,IAAIgB,IAAI,OAA2BJ,EAAM,GARlEF,EAIAO,OAAAL,EAAAK,QAAA,KAQEP,EAAIQ,OAAO,WALXR,OAAII,QAAOD","file":"app.min.js","sourcesContent":["var createError = require('http-errors');\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\n\nvar indexRouter = require('./routes/index');\nvar usersRouter = require('./routes/users');\nvar mydataRouter = require('./routes/mydata');\nvar computationRouter = require('./routes/computation');\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\napp.use('/mydata', mydataRouter);\napp.use('/computation', computationRouter);\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"]}